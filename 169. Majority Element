class Solution {
public:
    int majorityElement(vector<int>& nums) {
        int n = nums.size();
        map<int,int> mp;
        for(int i = 0; i<n; i++){
            mp[nums[i]]++;
        }
        for(auto it:mp){
            if(it.second>(n/2)){
                return it.first;
            }
        }
        return -1;
    }
};


---java---
class Solution {
    public int majorityElement(int[] nums) {
        int count = 0;
        int el = 0; // initialize the variable

        // Step 1: Find a potential candidate
        for (int i = 0; i < nums.length; i++) {
            if (count == 0) {
                el = nums[i];
                count = 1;
            } else if (nums[i] == el) {
                count++;
            } else {
                count--;
            }
        }

        // Step 2: Verify the candidate
        int count1 = 0;
        for (int j = 0; j < nums.length; j++) {
            if (nums[j] == el) {
                count1++;
            }
        }

        if (count1 > nums.length / 2) {
            return el;
        } else {
            return -1;
        }
    }
}
